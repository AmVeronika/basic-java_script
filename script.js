// 1. Дан код:
//       var a = 1, 
//       b = 1, 
//       c, 
//       d;
//    1. c = ++a; alert(c);           // 2
//    2. d = b++; alert(d);           // 1
//    3. c = (2+ ++a); alert(c);      // 5
//    4. d = (2+ b++); alert(d);      // 4
//    5. alert(a);                    // 3
//    6. alert(b);                    // 3

// Почему код даёт именно такие результаты?

// В первом преобразовании используется префиксная форма. ++ увеличивает значение на единицу, и после присваивает полученное значение переменным а и с.
// Таким образом переменные c = 2, a = 2.

// Во втором преобразовании применяется постфиксная форма. ++ сначала меняет переменную d, а уже после увеличивает значение переменных b и d на единицу.
// Таким образом переменные d = 1, b = 2.

// В третьем преобразовании используется префиксная форма. ++ увеличивает значение на единицу, и после присваивает полученное значение переменным а и с.
// Таким образом формула выглядит так c = (2 + 1+2). Переменные c = 5, a = 3.

// Во четвёртом преобразовании применяется постфиксная форма. ++ сначала меняет переменную d, а уже после увеличивает значение переменных b и d на единицу.
// Таким образом формула выглядит так d = (2 + 2).переменные d = 4, b = 3.

// В пятом и четвортом пунктах alert выведет на экран переменные со значением a = 3, b = 4.




// 2. Чему будет равен x в примере ниже?
// var a = 2;
// var x = 1 + (a *= 2);

// Переменной х в данном примере будет присвоено значение 5. Математический оператор в примере выше записан в упрощённом виде. 
// a *=2 читается как: a = a * 2 => а =2 * 2. 




// 3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму; 
// ноль можно считать положительным числом.
console.log('Задача 3:');

let am = parseInt(Math.random() * (100 - -100 + 1) + -100);
let bm = parseInt(Math.random() * (100 - -100 + 1) + -100);
console.log(`Переменная a = ${am}`);
console.log(`Переменная a = ${bm}`);
if (am >= 0 && bm >= 0) {
   console.log(`Разность а и b = ${am - bm}`);
} else if (am < 0 && bm < 0) {
   console.log(`Произведение а и b = ${am * bm}`);
} else if (am < 0 && bm >= 0 || am >= 0 && bm < 0) {
   console.log(`Сумма а и b = ${am + bm}`);
}


// 4. Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15. Дополнительно, по желанию, реализуйте решение с помощью рекурсивной функции.
console.log('Задача 4:');
console.log('Вариант решения 1:');

let a = parseInt(Math.random() * (15 - 0 + 1) + 0);
//let a = parseInt(Math.random() * 16);
console.log(`Рандомное значение а = ${a}`);
switch (a) {
   case 0:
      console.log("Число: 0");
   case 1:
      console.log("Число: 1");
   case 2:
      console.log("Число: 2");
   case 3:
      console.log("Число: 3");
   case 4:
      console.log("Число: 4");
   case 5:
      console.log("Число: 5");
   case 6:
      console.log("Число: 6");
   case 7:
      console.log("Число: 7");
   case 8:
      console.log("Число: 8");
   case 9:
      console.log("Число: 9");
   case 10:
      console.log("Число: 10");
   case 11:
      console.log("Число: 11");
   case 12:
      console.log("Число: 12");
   case 13:
      console.log("Число: 13");
   case 14:
      console.log("Число: 14");
   case 15:
      console.log("Число: 15");
}
console.log('Вариант решения 2:');

function mp(x) {
   if (x == 1) {
      return x;
   }
   if (x < 15) {
      return (x * mp(x - 1));
   }
   // {
   //    if (a == 14) {
   //       return console.log("Число: 14");
   //    }
   // }
   // if (a == 13) {
   //    return console.log("Число: 13");
   // }
   // if (a == 12) {
   //    return console.log("Число: 12");
   // }
   // if (a == 11) {
   //    return console.log("Число: 11");
   // }
   // if (a == 10) {
   //    return console.log("Число: 10");
   // }






}
console.log(`Рандомное значение а = ${a}`);
console.log(mp(a));



// 5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.





// 6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).





// 7. *Сравнить null и 0. Попробуйте объяснить результат.




// 8. *С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.